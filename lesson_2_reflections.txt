What happens when you initialze a repository? Why do you need to do it?

A .git file is created when you initialize a repository.  You need to do this so that you can starting doing commits.  If there is no repository it will not commit changes as a repository.

How is the staging are different from the working directory and the repository? What value do you think it offers?

The staging area is different from the working directory in that it is not actually a location. It just holds the information of which files will be commited in the next commit. The value of this is to show which files will be added to the next commit.

How can you use the staging area to make sure you have one commit per logical change?

You can use the staging area to add only what you want to in the commit. This way only the changes in the sections for that logical change will be included in that commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

One situation where it would be helpful is different languages of the program, another situation is when you have programs that need to run on different OS's.  This would be helpful in keeping them separated from eachother.

How do the diagrams help you visualize the branch structure?

The diagrams help you visualize the branch structure by seeing which parts of the code are included and which parts are not in each branch and how many different branches there are.
